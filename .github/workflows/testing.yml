name: CI Tests

on: [push, pull_request]

jobs:
  style:
    name: Black Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U black
    - name: Run check
      run: |
        black --check .

  macos:
    name: MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U pip setuptools wheel
        pip install -r requirements.txt
    - name: Test
      run: |
        python -m unittest discover

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U pip setuptools wheel
        pip install -r requirements.txt
    - name: Test
      run: |
        python -m unittest discover

  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U pip setuptools wheel coverage
        pip install -r requirements.txt
    - name: Test
      run: |
        coverage run tests/*
        coverage report -m
        export CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}
        codecov
